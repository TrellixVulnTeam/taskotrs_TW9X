# -*- coding: utf-8 -*-
import telebot
from datetime import datetime
from conf import base, mailsender, config
# from flask import Flask, request
# import os


bot = telebot.TeleBot(config.properties.TELEGRAM_BOT_TOKEN)
# server = Flask(__name__)

# Chat ID
def getCID(message):
    return message.chat.id

# User ID
def getUID(message):
    return message.from_user.id


def log(message):
    date = str(datetime.now().strftime("%d/%m/%Y %H:%M:%S"))
    if bool(message.from_user.last_name) and bool(message.from_user.first_name):
        string = (date + " NAME: " + message.from_user.first_name + ' '
          + message.from_user.last_name + " USER_ID: " + str(message.from_user.id) + " MESSAGE: " + message.text)
    else:
        string = (date + " NAME: " + message.from_user.first_name + " USER_ID: " + str(message.from_user.id)
          + " MESSAGE: " + message.text)
    f = open(config.properties.PATH + "log/bot.log", 'a')
    f.write(string + '\n')
    f.close()
    

@bot.message_handler(commands=['start', 'help', 'stop'])
def start(message):
    cid = getCID(message)
    check = base.findUid(message.from_user.id)
    if message.text == "/start":
        if message.from_user.id == check:
            text = "*–ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É*\n\n" \
                   "‚ÑπÔ∏è –ß—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–∏—Å—å–º–æ, –∏—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É /mail –≤ —Ñ–æ—Ä–º–∞—Ç–µ:" \
                   "\n\n`/mail <–≤–∞—à —Ç–µ–∫—Å—Ç –ø–∏—Å—å–º–∞>`"
            log(message)
            bot.send_message(cid, text, parse_mode="Markdown")
        else:
            text = "*–ü—Ä–æ—Å—Ç–∏, –Ω–æ —è —Ç–µ–±—è –Ω–µ –∑–Ω–∞—é.\n" \
                   "–Ø —Ä–∞–±–æ—Ç–∞—é —Ç–æ–ª—å–∫–æ —Å –¥–æ–≤–µ—Ä–µ–Ω–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏!*\n\n" \
                   "‚ÑπÔ∏è –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º, –æ—Ç–ø—Ä–∞–≤—å —Å–≤–æ–π *UserID* –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.\n\n" \
                   "–¢–≤–æ–π *UserID*: `" + str(message.from_user.id) + "`"
            log(message)
            bot.send_message(cid, text, parse_mode="Markdown")

    if message.text == "/help":
        text = "üí° *–ü–æ–º–æ—â—å*\n\n" \
               "*MailSenderBot* –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å –ø–∏—Å–µ–º –≤ ¬´Task OTRS¬ª.\n\n" \
               "‚ÑπÔ∏è –ß—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–∏—Å—å–º–æ, –∏—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É /mail –≤ —Ñ–æ—Ä–º–∞—Ç–µ:" \
               "\n\n`/mail <–≤–∞—à —Ç–µ–∫—Å—Ç –ø–∏—Å—å–º–∞>`\n\n" \
               "–ï—Å–ª–∏ –≤–¥—Ä—É–≥ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –±–æ—Ç–∞ —Ç–µ–±–µ –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω, —É–∑–Ω–∞–π —Å–≤–æ–π *UserID* –∏—Å–ø–æ–ª—å–∑—É—è –∫–æ–º–∞–Ω–¥—É " \
               "/whoami –∏ –ø–µ—Ä–µ–¥–∞–π –µ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –¥–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏."
        log(message)
        bot.send_message(message.chat.id, text, parse_mode="Markdown")

    if message.text == "/stop":
        text = "–£–∂–µ —É—Ö–æ–¥–∏—à—å? –ù—É –ø–æ–∫–∞ :("
        log(message)
        bot.send_message(message.chat.id, text)


@bot.message_handler(commands=['mail'])
def echo(message):
    cid = getCID(message)
    check = base.findUid(message.from_user.id)
    if message.from_user.id == check:
        mail = message.text[6:]
        if bool(mail) == True:
            log(message)
            bot.send_message(cid, mailsender.send(message.from_user.id, message.from_user.first_name, mail), parse_mode="Markdown")
        else:
            text = "‚ÑπÔ∏è –ß—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–∏—Å—å–º–æ, –∏—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É /mail –≤ —Ñ–æ—Ä–º–∞—Ç–µ:" \
                   "\n\n`/mail <–≤–∞—à —Ç–µ–∫—Å—Ç –ø–∏—Å—å–º–∞>`"
            log(message)
            bot.send_message(cid, text, parse_mode="Markdown")
    else:
        text = "*–ü—Ä–æ—Å—Ç–∏, –Ω–æ —è —Ç–µ–±—è –Ω–µ –∑–Ω–∞—é. –Ø —Ä–∞–±–æ—Ç–∞—é —Ç–æ–ª—å–∫–æ —Å –¥–æ–≤–µ—Ä–µ–Ω–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏!*\n\n" \
               "‚ÑπÔ∏è –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º, –æ—Ç–ø—Ä–∞–≤—å —Å–≤–æ–π *UserID* –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.\n\n" \
               "–¢–≤–æ–π *UserID:* `" + str(message.from_user.id) + "`"
        log(message)
        bot.send_message(cid, text, parse_mode="Markdown")


@bot.message_handler(commands=['whoami'])
def whoami(message):
    cid = getCID(message)
    text = "–¢–≤–æ–π *UserID*: " + "`" + str(getUID(message)) + "`"
    log(message)
    bot.send_message(cid, text, parse_mode="Markdown")


@bot.message_handler(commands=['settings'])
def settings(message):
    cid = getCID(message)
    check = base.userType(message.from_user.id)
    if check == 'admin':
        text = "‚öô *–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–æ—Ç–∞*\n\n" \
               "–î–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã:\n\n" \
               "/change `<user@host.ru>` - –°–º–µ–Ω–∏—Ç—å –ø–æ–ª—É—á–∞—Ç–µ–ª—è\n" \
               "/adduser `<UserID>` - –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n" \
               "/addadmin `<UserID>` - –î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞\n" \
               "/deluser `<UserID>` - –£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n" \
               "/getlog - –ü–æ–ª—É—á–∏—Ç—å —Å–≤–µ–∂–∏–π –ª–æ–≥—Ñ–∞–π–ª"
        log(message)
        bot.send_message(cid, text, parse_mode="Markdown")
    else:
        text = "‚õîÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–æ—Å—Ç—É–ø–Ω—ã —Ç–æ–ª—å–∫–æ *–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º*!"
        log(message)
        bot.send_message(cid, text, parse_mode="Markdown")


@bot.message_handler(commands=['adduser'])
def adduser(message):
    cid = getCID(message)
    check = base.userType(message.from_user.id)
    if check == 'admin':
        intext = base.check_data(message.text[9:])
        if bool(intext):
            log(message)
            bot.send_message(cid, base.addUser(intext, 'user'), parse_mode="Markdown")
        else:
            text = "*–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è*\n\n" \
                   "‚ÑπÔ∏è –ò—Å–ø–æ–ª—å–∑—É–π —ç—Ç—É –∫–æ–º–∞–Ω–¥—É –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –¥–æ–≤–µ—Ä–µ–Ω–Ω—ã–π –ª–∏—Å—Ç, –≤ —Ñ–æ—Ä–º–∞—Ç–µ:" \
                   "\n\n`/adduser <user_id>`"
            log(message)
            bot.send_message(cid, text, parse_mode="Markdown")
    else:
        text = "‚õîÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–æ—Å—Ç—É–ø–Ω—ã —Ç–æ–ª—å–∫–æ *–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º*!"
        log(message)
        bot.send_message(cid, text, parse_mode="Markdown")


@bot.message_handler(commands=['deluser'])
def adduser(message):
    cid = getCID(message)
    check = base.userType(message.from_user.id)
    if check == 'admin':
        intext = base.check_data(message.text[9:])
        if bool(intext):
            log(message)
            bot.send_message(cid, base.delUser(intext), parse_mode="Markdown")
        else:
            text = "*–£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è*\n\n" \
                   "‚ÑπÔ∏è –ò—Å–ø–æ–ª—å–∑—É–π —ç—Ç—É –∫–æ–º–∞–Ω–¥—É –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –¥–æ–≤–µ—Ä–µ–Ω–Ω–æ–≥–æ –ª–∏—Å—Ç–∞, –≤ —Ñ–æ—Ä–º–∞—Ç–µ:" \
                   "\n\n`/deluser <user_id>`"
            log(message)
            bot.send_message(cid, text, parse_mode="Markdown")
    else:
        text = "‚õîÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–æ—Å—Ç—É–ø–Ω—ã —Ç–æ–ª—å–∫–æ *–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º*!"
        log(message)
        bot.send_message(cid, text, parse_mode="Markdown")



@bot.message_handler(commands=['addadmin'])
def addadmin(message):
    cid = getCID(message)
    check = base.userType(message.from_user.id)
    if check == 'admin':
        intext = base.check_data(message.text[10:])
        if bool(intext):
            log(message)
            bot.send_message(cid, base.addUser(intext, 'admin'), parse_mode="Markdown")
        else:
            text = "*–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞*\n\n" \
                   "‚ÑπÔ∏è –ò—Å–ø–æ–ª—å–∑—É–π —ç—Ç—É –∫–æ–º–∞–Ω–¥—É –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞, –≤ —Ñ–æ—Ä–º–∞—Ç–µ:" \
                   "\n\n`/adduser <user_id>`"
            log(message)
            bot.send_message(cid, text, parse_mode="Markdown")
    else:
        text = "‚õîÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–æ—Å—Ç—É–ø–Ω—ã —Ç–æ–ª—å–∫–æ *–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º*!"
        # log(message)
        bot.send_message(cid, text, parse_mode="Markdown")


@bot.message_handler(commands=['change'])
def change(message):
    cid = getCID(message)
    check = base.userType(message.from_user.id)
    if check == 'admin':
        intext = message.text[8:]
        if bool(intext):
            change = base.updateMail(message.from_user.id, str(intext))
            log(message)
            bot.send_message(cid, change, parse_mode="Markdown")
        else:
            text = "*–°–º–µ–Ω–∞ –∞–¥—Ä–µ—Å–∞ –ø–æ–ª—É—á–∞—Ç–µ–ª—è*\n\n" \
                   "‚ÑπÔ∏è –î–ª—è —Å–º–µ–Ω—ã –∞–¥—Ä–µ—Å–∞ –ø–æ–ª—É—á–∞—Ç–µ–ª—è –∏—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n\n`/change <e-mail address>`"
            log(message)
            bot.send_message(cid, text, parse_mode="Markdown")
    else:
        text = "‚õîÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–æ—Å—Ç—É–ø–Ω—ã —Ç–æ–ª—å–∫–æ *–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º*!"
        log(message)
        bot.send_message(cid, text, parse_mode="Markdown")


@bot.message_handler(commands=['getlog'])
def getlog(message):
    cid = getCID(message)
    check = base.userType(message.from_user.id)
    if check == 'admin':
        file = open(config.properties.PATH + "log/bot.log", 'rb')
        log(message)
        bot.send_document(cid, file)
    else:
        text = "‚õîÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–æ—Å—Ç—É–ø–Ω—ã —Ç–æ–ª—å–∫–æ *–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º*!"
        log(message)
        bot.send_message(cid, text, parse_mode="Markdown")


# @server.route("/bot", methods=['POST'])
# def getMessage():
#     bot.process_new_updates([telebot.types.Update.de_json(request.stream.read().decode("utf-8"))])
#     return "!", 200
#
#
# @server.route("/")
# def webhook():
#     bot.remove_webhook()
#     bot.set_webhook(url=config.properties.APP_URL)
#     return "!", 200
#
# server.run(host="0.0.0.0", port=os.environ.get('PORT', 5000))
# server = Flask(__name__)

bot.polling()